<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>unix on Notes of bvfnbk</title><link>https://bvfnbk.github.io/tags/unix/</link><description>Recent content in unix on Notes of bvfnbk</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 22 Jul 2022 14:39:18 +0200</lastBuildDate><atom:link href="https://bvfnbk.github.io/tags/unix/index.xml" rel="self" type="application/rss+xml"/><item><title>hugo</title><link>https://bvfnbk.github.io/posts/man/hugo/</link><pubDate>Fri, 22 Jul 2022 14:39:18 +0200</pubDate><guid>https://bvfnbk.github.io/posts/man/hugo/</guid><description>Name hugo - hugo builds your site
Examples Site A new site can be created with
$ hugo new site $NAME To create the site in the current working directory, use
$ hugo new site . Eventually add --force if the current working directory is not empty.
Posts A new post can be created with:
$ hugo new posts/$NAME.md # or: $ hugo new posts/$NAME/index.md This either creates the file posts/$NAME.</description></item><item><title>git</title><link>https://bvfnbk.github.io/posts/man/git/</link><pubDate>Fri, 22 Jul 2022 12:04:40 +0200</pubDate><guid>https://bvfnbk.github.io/posts/man/git/</guid><description>Name git - the stupid content tracker
Examples Initialize Repository $ mkdir repository/ $ cd repository/ $ touch README.md $ git add README.md $ git commit -m &amp;#39;initial commit&amp;#39; Pushing $ git push [--set-upstream | -u] $REMOTE $BRANCH [--force] Remotes List $ git remote -v origin git@github.com:$USER/$REPOSITORY.git (fetch) origin git@github.com:$USER/$REPOSITORY.git (push) Delete $ git remote remove $NAME Add $ git remote add $NAME git@github.com:$USER/$REPOSITORY.git Submodules Add Submodule $ cd working-directory/ $ git submodule add $URL [$MODULE_PATH] This creates (or updates) the .</description></item><item><title>date</title><link>https://bvfnbk.github.io/posts/man/date/</link><pubDate>Fri, 22 Jul 2022 10:34:35 +0200</pubDate><guid>https://bvfnbk.github.io/posts/man/date/</guid><description>Name date - display or set date and time
Examples Print Formatted Date/Time Date/Time with time zone offset (format: +hhmm):
date +%Y-%m-%d&amp;#39;T&amp;#39;%H:%M:%s%z 2022-07-22T10:51:14+0200 or shorter
date +%F&amp;#39;T&amp;#39;%T%z 2022-07-22T10:51:14+0200 Date/Time with time zone offset (format +hh:mm):
On macOS TZ=Europe/Berlin date -Iseconds -r $(date +%s) 2022-07-22T10:33:40+02:00 On Linux date +%F&amp;#39;T&amp;#39;%T%:z 2022-07-22T10:33:40+02:00</description></item><item><title>ssh-keygen</title><link>https://bvfnbk.github.io/posts/man/ssh-keygen/</link><pubDate>Tue, 12 Jul 2022 16:32:11 +0200</pubDate><guid>https://bvfnbk.github.io/posts/man/ssh-keygen/</guid><description>Name ssh-keygen - OpenSSH authentication key utility.
Synopsis ssh-keygen [-t rsa | ed25519 | ...] [-b bits] [-N new_passphrase] [-f output_keyfile] Examples Interactive ssh-keygen asks for the path to the output file and the passphrase for the private key.
ssh-keygen -t rsa -b 4096 -C &amp;#34;user@domain.tld&amp;#34; ssh-keygen -t ed25519 -C &amp;#34;user@domain.tld&amp;#34; Please note: The rsa algorith is the default. ed25519 might not be supported on all systems.
For Scripts ssh-keygen -t rsa -b 4096 -C &amp;#34;user@domain.</description></item></channel></rss>