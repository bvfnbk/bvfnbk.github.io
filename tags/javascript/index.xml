<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>javascript on Notes of bvfnbk</title><link>https://bvfnbk.github.io/tags/javascript/</link><description>Recent content in javascript on Notes of bvfnbk</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 05 Oct 2022 12:34:34 +0200</lastBuildDate><atom:link href="https://bvfnbk.github.io/tags/javascript/index.xml" rel="self" type="application/rss+xml"/><item><title>Testing the &lt;hello-message> Web Component</title><link>https://bvfnbk.github.io/posts/example-web-components/testing-hello-message/</link><pubDate>Wed, 05 Oct 2022 12:34:34 +0200</pubDate><guid>https://bvfnbk.github.io/posts/example-web-components/testing-hello-message/</guid><description>The created web component (admittedly) is very simple and does not implement sophisticated behaviour (or any behaviour for that matter). It should be tested nonetheless.
The part of the software stack actually running the tests is called a test runner. Another important part is the DSL to be used to write the tests. Basically install the following packages:
karma (test runner) jasmine-core (test DSL) karma-jasmine karma-chrome-launcher karma-firefox-launcher Please note:</description></item><item><title>Overview: Web Components</title><link>https://bvfnbk.github.io/posts/example-web-components/overview/</link><pubDate>Thu, 25 Aug 2022 10:04:45 +0200</pubDate><guid>https://bvfnbk.github.io/posts/example-web-components/overview/</guid><description>Examples A &amp;lt;hello-message&amp;gt; Web Component Define a JavaScript web component. Add a watched string attribute. Update the attribute using JavaScript. Testing the &amp;lt;hello-message&amp;gt; Web Component A &amp;lt;hello-message&amp;gt; TypeScript Web Component Same as the JavaScript web component. â€¦only using TypeScript. Test specifications from Testing the &amp;lt;hello-message&amp;gt; Web Component have been ported over. A &amp;lt;message-input&amp;gt; Web Component/posts/example-web-components/message-input/) Convert the &amp;lt;label&amp;gt; and &amp;lt;input&amp;gt; element to a dedicated component.</description></item><item><title>A &lt;hello-message> Web Component</title><link>https://bvfnbk.github.io/posts/example-web-components/hello-message/</link><pubDate>Mon, 22 Aug 2022 16:13:21 +0200</pubDate><guid>https://bvfnbk.github.io/posts/example-web-components/hello-message/</guid><description>Vanilla web components are custom components written in plain JavaScript - not using any of the usual component frameworks like React, Vue or Angular and alike involved.
The following source code snippet defines a &amp;lt;hello-message /&amp;gt; component, written in plain JavaScript. It supports a single attribute named name:
Create a file src/public/js/HelloMessage.js with the following contents:
/* * Define template: * * - create `template` element * - set contents (`innerHTML`) - including `&amp;lt;style&amp;gt;` block.</description></item></channel></rss>